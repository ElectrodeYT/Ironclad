--  rts.gpr.in: Project's RTS building script.
--  Copyright (C) 2023 streaksu
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.

library project RTS is
   --  Compilation flags.
   type Arch_Name is
      ("aarch64-stivale2",
       "arm-raspi2b",
       "sparc-leon3",
       "x86_64-multiboot2");
   Arch : Arch_Name := "@target_cpu@-@target_vendor@";
   Ada_Flags        := "@ADAFLAGS@";
   Asm_Flags        := "@ASFLAGS@";
   Linker_Flags     := "@LDFLAGS@";

   for Create_Missing_Dirs use "True";
   for Source_Dirs use ("rtsdir/adainclude");
   for Object_Dir use "rtsdir/obj";

   for Languages use ("Ada");

   package Builder is
      for Global_Configuration_Pragmas use "@SRCDIR@/source/pragmas.adc";
      for Switches ("Ada") use ("-nostdlib", "-nostdinc");
   end Builder;

   package Compiler is
      Base_Ada_Switches := Split (Ada_Flags, " ") & (
         "-fno-stack-protector", "-fno-stack-check", "-nostdlib", "-nostdinc",
         "-gnatg"
      );
      Base_Asm_Switches := Split (Asm_Flags, " ");

      case Arch is
         when "aarch64-stivale2" =>
            for Switches ("Ada") use Base_Ada_Switches & (
               "-static", "-fno-pie", "-fno-pic", "-mgeneral-regs-only",
               "-march=armv8-a"
            );
            for Switches ("Asm_Cpp") use Base_Asm_Switches;
         when "arm-raspi2b" =>
            for Switches ("Ada") use Base_Ada_Switches & (
               "-static", "-fno-pie", "-fpic", "-mgeneral-regs-only",
               "-mcpu=cortex-a7"
            );
            for Switches ("Asm_Cpp") use Base_Asm_Switches;
         when "sparc-leon3" =>
            for Switches ("Ada") use Base_Ada_Switches & (
               "-mcpu=leon3", "-static", "-fno-pie", "-fno-pic"
            );
            for Switches ("Asm_Cpp") use Base_Asm_Switches & ("-mcpu=leon3");
         when "x86_64-multiboot2" =>
            for Switches ("Ada") use Base_Ada_Switches & (
               "-fno-pie", "-fno-pic", "-mgeneral-regs-only", "-mno-red-zone",
               "-mcmodel=kernel"
            );
            for Switches ("Asm_Cpp") use Base_Asm_Switches & (
               "-fno-pie", "-fno-pic", "-mno-red-zone", "-mcmodel=kernel"
            );
      end case;
   end Compiler;

   for Library_Dir  use "rtsdir/adalib";
   for Library_Kind use "static";
   for Library_Name use "gnat";
   for Runtime ("Ada") use "rtsdir";
end RTS;
