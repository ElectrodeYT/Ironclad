#  GNUmakefile.in: Standard-complying wrapper for gprbuild and install.
#  Copyright (C) 2023 streaksu
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Nuke built-in rules and variables
override MAKEFLAGS += -rR

# Import some autoconf variables as make variables
override SRCDIR          := @SRCDIR@
override BUILDDIR        := @BUILDDIR@
override PACKAGE_VERSION := @PACKAGE_VERSION@
override PACKAGE_TARNAME := @PACKAGE_TARNAME@
override OUTPUT          := $(PACKAGE_TARNAME)

# Autoconf dir variables.
override prefix      := @prefix@
override datarootdir := @datarootdir@
override infodir     := @infodir@
override docdir      := @docdir@

# Generator executables.
override MKDIR_P      := @MKDIR_P@
override INSTALL      := @INSTALL@
override INSTALL_DATA := @INSTALL_DATA@

# Target information.
override target_cpu    := @target_cpu@
override target_vendor := @target_vendor@
override target_full   := $(target_cpu)-$(target_vendor)

# Macros to make our build system still work from within paths with spaces
# or other special characters.
override SPACE := $(subst ,, )
MKESCAPE = $(subst $(SPACE),\ ,$(1))
SHESCAPE = $(subst ','\'',$(1))

# Max threads. MAX POWAHH
override PARALLELISM := $(shell nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || psrinfo -tc 2>/dev/null || echo 1)

# Default target.
.PHONY: all
all: $(OUTPUT)

# Link rules for the final kernel executable.
$(OUTPUT):
	gprbuild --target=$(target_cpu)-linux-gnu -P ironclad.gpr -j$(PARALLELISM)

.PHONY: docs
docs: ironclad.info

ironclad.info:
	makeinfo '$(call SHESCAPE,$(SRCDIR))'/docs/ironclad.texi -o ironclad.info

.PHONY: html
html: ironclad_html

ironclad_html:
	makeinfo '$(call SHESCAPE,$(SRCDIR))'/docs/ironclad.texi --html -o ironclad_html

.PHONY: prove
prove:
	gnatprove -P ironclad.gpr -U --prover=cvc4,altergo,z3 --mode=all -j$(PARALLELISM)

# Remove object files and the final executable.
.PHONY: clean
clean:
	rm -rf $(OUTPUT) obj gnatprove ironclad.info ironclad_html

# Remove files generated by configure.
.PHONY: distclean
distclean: clean
	rm -rf libgnat-hack config.log config.status GNUmakefile ironclad.gpr

# Create a release tarball.
.PHONY: dist
dist:
	rm -rf "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"
	$(MKDIR_P) "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"
	cp -rp '$(call SHESCAPE,$(SRCDIR))'/.git "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"/
	cd "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)" && git checkout .
	cd "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)" && ./bootstrap
	rm -rf "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"/.git
	rm -rf "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"/.gitignore
	rm -rf "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"/autom4te.cache
	echo "$(PACKAGE_VERSION)" >"$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"/version
	tar -zcf "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)".tar.gz "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"
	rm -rf "$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)"

# Remove ALL generated files.
.PHONY: maintainer-clean
maintainer-clean: distclean
	cd '$(call SHESCAPE,$(SRCDIR))' && rm -rf configure build-aux *'~' autom4te.cache

# Install files and executables to the final locations.
.PHONY: install
install: all
	$(INSTALL) -d '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)'
	$(INSTALL_DATA) $(OUTPUT) '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)/'

.PHONY: install-docs
install-docs: docs
	$(INSTALL) -d '$(call SHESCAPE,$(DESTDIR)$(infodir))'
	$(INSTALL) -d '$(call SHESCAPE,$(DESTDIR)$(docdir))'
	$(INSTALL_DATA) ironclad.info '$(call SHESCAPE,$(DESTDIR)$(infodir))/'
	$(INSTALL_DATA) '$(call SHESCAPE,$(SRCDIR))'/README '$(call SHESCAPE,$(DESTDIR)$(docdir))/'
	$(INSTALL_DATA) '$(call SHESCAPE,$(SRCDIR))'/COPYING '$(call SHESCAPE,$(DESTDIR)$(docdir))/'

# Install and strip executables.
.PHONY: install-strip
install-strip: install
	strip '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)'/"$$(basename '$(OUTPUT)')"

# Uninstall previously installed files and executables.
.PHONY: uninstall
uninstall:
	rm -rf '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)'
